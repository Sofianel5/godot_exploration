[gd_scene load_steps=4 format=3 uid="uid://b4x2n8fqr7lm5"]

[sub_resource type="GDScript" id="GDScript_1"]
script/source = "extends Node3D

@export var damage = 25
@export var fire_rate = 0.1
@export var ammo = 30
@export var max_ammo = 30

@onready var muzzle_flash = $MuzzleFlash
@onready var camera = get_parent()

var fire_timer = 0.0

signal weapon_fired(ammo_left: int)
signal weapon_reloaded(ammo: int)

func _ready():
	muzzle_flash.visible = false

func _process(delta):
	if fire_timer > 0.0:
		fire_timer -= delta
	
	if Input.is_action_pressed(\"shoot\") and can_fire():
		fire()
	
	if Input.is_action_just_pressed(\"ui_accept\"): # R key for reload
		reload()

func can_fire() -> bool:
	return fire_timer <= 0.0 and ammo > 0

func fire():
	if not can_fire():
		return
	
	ammo -= 1
	fire_timer = fire_rate
	
	# Show muzzle flash
	show_muzzle_flash()
	
	# Perform raycast
	raycast_shot()
	
	# Emit signal for UI updates
	weapon_fired.emit(ammo)

func reload():
	ammo = max_ammo
	weapon_reloaded.emit(ammo)

func show_muzzle_flash():
	muzzle_flash.visible = true
	var tween = create_tween()
	tween.tween_delay(0.05)
	tween.tween_callback(func(): muzzle_flash.visible = false)

func raycast_shot():
	var space_state = camera.get_world_3d().direct_space_state
	
	# Cast ray from camera center
	var from = camera.global_position
	var to = from + camera.global_transform.basis.z * -1000.0
	
	var query = PhysicsRayQueryParameters3D.create(from, to)
	query.collision_mask = 0b1110  # Hit everything except player
	
	var result = space_state.intersect_ray(query)
	
	if result:
		var hit_point = result.position
		var collider = result.collider
		
		# Check if we hit an enemy
		if collider and collider.has_method(\"take_damage\"):
			collider.take_damage(damage)
		
		# Create hit effect at hit point
		create_hit_effect(hit_point)

func create_hit_effect(position: Vector3):
	print(\"Hit at position: \", position)
"

[sub_resource type="BoxMesh" id="BoxMesh_1"]
size = Vector3(0.1, 0.05, 0.3)

[sub_resource type="SphereMesh" id="SphereMesh_1"]
radius = 0.02
height = 0.04

[node name="Weapon" type="Node3D"]
script = SubResource("GDScript_1")

[node name="WeaponModel" type="MeshInstance3D" parent="."]
mesh = SubResource("BoxMesh_1")
material_override = StandardMaterial3D.new()

[node name="MuzzleFlash" type="MeshInstance3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, -0.15)
mesh = SubResource("SphereMesh_1")
material_override = StandardMaterial3D.new()